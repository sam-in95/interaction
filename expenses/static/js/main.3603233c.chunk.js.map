{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","Math","random","onAddExpense","DUMMY_EXPENSES","App","expenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3603233c.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('ko-KR', { month: 'short' });\r\n  const day = props.date.toLocaleString('ko-KR', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">\r\n            {props.amount.toLocaleString()} 원\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">지출 내역이 없습니다.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React, { useState } from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport Card from '../UI/Card';\r\n\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2022');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n\r\n        <ExpensesList items={filteredExpenses} />\r\n\r\n        {/* {filteredExpenses.lenth === 0 && <p>지출 내역이 없습니다.</p>}\r\n\r\n        {filteredExpenses.length > 0 &&\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))} */}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n\r\n    // 이전 State에 의존하는 방식, 항상 최신\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    //   // 새로운 상태로 오버라이드\r\n    // });\r\n  };\r\n\r\n  const addExpensesHandler = (event) => {\r\n    event.preventDefault();\r\n    alert();\r\n  };\r\n\r\n  const AmountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHnadler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    // <form onSubmit={addExpensesHandler}>\r\n    //   <button type=\"submit\">지출내역 추가하기</button>\r\n    // </form>\r\n    <form onSubmit={submitHnadler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>품목</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>가격</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"100\"\r\n            step=\"100\"\r\n            value={enteredAmount}\r\n            onChange={AmountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>날짜</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            step=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          취소\r\n        </button>\r\n        <button type=\"submit\">추가하기</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHnadler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHnadler}>지출 내역 추가하기</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'QC 45',\n    amount: 320000,\n    date: new Date(2022, 5, 28),\n  },\n  {\n    id: 'e2',\n    title: '모니터',\n    amount: 500000,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: '의자',\n    amount: 400000,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: '책상 (원목)',\n    amount: 450000,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}